{"neurons": {"1": {"name": "E", "size": 10, "master_eqns": "\ndv/dt=(current + I_app)/Cm : volt\nCm = 1*uF : farad\nI_app = 0*uA : amp\n", "mechanism_list": ["iNa", "iK", "iT", "CaBuffer"], "iNa": {"name": "iNa", "raw_eqns": {"neuron_eqns": "g_Na = 120*msiemens : siemens\nE_Na = 50*mV : volt\nv_shift_Na = -65*mV : volt\nalpha_m_Na = (2.5-.1*(v-v_shift_Na)/mV)/(exp(2.5-.1*(v-v_shift_Na)/mV)-1)/ms : Hz\nbeta_m_Na = 4*exp(-(v-v_shift_Na)/mV/18)/ms : Hz\nalpha_h_Na = .07*exp(-(v-v_shift_Na)/mV/20)/ms : Hz\nbeta_h_Na = 1./(exp(3-.1*(v-v_shift_Na)/mV)+1)/ms : Hz\nI_Na = -g_Na*m_Na**3*h_Na*(v-E_Na) : amp\n# ODEs and ICs\ndm_Na/dt = alpha_m_Na*(1-m_Na)-beta_m_Na*m_Na : 1\ndh_Na/dt = alpha_h_Na*(1-h_Na)-beta_h_Na*h_Na : 1\n"}, "converted_eqns": {"neuron_eqns": "E_Na_E = 50*mV : volt\ng_Na_E = 120*msiemens : siemens\nv_shift_Na_E = -65*mV : volt\nalpha_h_Na_E = .07*exp(-(v-v_shift_Na_E)/mV/20)/ms : hertz\nI_Na_E = -g_Na_E*m_Na_E**3*h_Na_E*(v-E_Na_E) : amp\nalpha_m_Na_E = (2.5-.1*(v-v_shift_Na_E)/mV)/(exp(2.5-.1*(v-v_shift_Na_E)/mV)-1)/ms : hertz\nbeta_m_Na_E = 4*exp(-(v-v_shift_Na_E)/mV/18)/ms : hertz\nbeta_h_Na_E = 1./(exp(3-.1*(v-v_shift_Na_E)/mV)+1)/ms : hertz\ndm_Na_E/dt = alpha_m_Na_E*(1-m_Na_E)-beta_m_Na_E*m_Na_E : 1\ndh_Na_E/dt = alpha_h_Na_E*(1-h_Na_E)-beta_h_Na_E*h_Na_E : 1"}, "current": {"name": "I_Na_E"}}, "iK": {"name": "iK", "raw_eqns": {"neuron_eqns": "# Parameters\ng_K = 36*msiemens : siemens\nE_K = -77*mV : volt\nv_shift_K = -65*mV : volt\n# Functions\nalpha_n_K = (.1-.01*(v-v_shift_K)/mV)/(exp(1-.1*(v-v_shift_K)/mV)-1)/ms : Hz\nbeta_n_K = .125*exp(-(v-v_shift_K)/mV/80)/ms : Hz\nI_K = -g_K*n_K**4.*(v-E_K) : amp\n# ODEs and ICs\ndn_K/dt = alpha_n_K*(1-n_K)-beta_n_K*n_K : 1\n"}, "converted_eqns": {"neuron_eqns": "v_shift_K_E = -65*mV : volt\nalpha_n_K_E = (.1-.01*(v-v_shift_K_E)/mV)/(exp(1-.1*(v-v_shift_K_E)/mV)-1)/ms : hertz\ng_K_E = 36*msiemens : siemens\nbeta_n_K_E = .125*exp(-(v-v_shift_K_E)/mV/80)/ms : hertz\nE_K_E = -77*mV : volt\nI_K_E = -g_K_E*n_K_E**4.*(v-E_K_E) : amp\ndn_K_E/dt = alpha_n_K_E*(1-n_K_E)-beta_n_K_E*n_K_E : 1"}, "current": {"name": "I_K_E"}}, "iT": {"name": "iT", "raw_eqns": {"neuron_eqns": "# Parameters\ng_T = 2*msiemens : siemens\nv_shift_T = -2*mV : volt\nphi_h_T = 3.73 : 1\n# Functions\nE_T = 1000.*((8.31441*309.15)/(2.*96846))*log(2./CaBuffer)*mV : volt\nm_inf_T  = 1./(1+exp((-((v-v_shift_T)/mV+57))/6.2)) : 1\nh_inf_T  = 1./(1+exp(((v-v_shift_T)/mV+81)/4)) : 1\ntau_h_T  = (30.8+(211.4+exp(((v-v_shift_T)/mV+113.2)/5))/(1+exp(((v-v_shift_T)/mV+84)/3.2)))/phi_h_T*ms : second\nI_T = -g_T*m_inf_T**2*h_T*(v-E_T) : amp\n# ODEs and ICs\ndh_T/dt = (h_inf_T-h_T)/tau_h_T : 1\n", "external_dependencies": ["CaBuffer"]}, "converted_eqns": {"neuron_eqns": "v_shift_T_E = -2*mV : volt\ng_T_E = 2*msiemens : siemens\nE_T_E = 1000.*((8.31441*309.15)/(2.*96846))*log(2./CaBuffer_E)*mV : volt\nm_inf_T_E = 1./(1+exp((-((v-v_shift_T_E)/mV+57))/6.2)) : 1\nphi_h_T_E = 3.73 : 1\nh_inf_T_E = 1./(1+exp(((v-v_shift_T_E)/mV+81)/4)) : 1\nI_T_E = -g_T_E*m_inf_T_E**2*h_T_E*(v-E_T_E) : amp\ntau_h_T_E = (30.8+(211.4+exp(((v-v_shift_T_E)/mV+113.2)/5))/(1+exp(((v-v_shift_T_E)/mV+84)/3.2)))/phi_h_T_E*ms : second\ndh_T_E/dt = (h_inf_T_E-h_T_E)/tau_h_T_E : 1"}, "current": {"name": "I_T_E"}}, "CaBuffer": {"name": "CaBuffer", "raw_eqns": {"neuron_eqns": "# ODEs and ICs\ndCaBuffer/dt = clip(((-10.*I_T)/uA/(2.*96489)), 0, 5)/ms + (0.00024/ms-CaBuffer/ms)/5 : 1\n", "external_dependencies": ["I_T"]}, "converted_eqns": {"neuron_eqns": "dCaBuffer_E/dt = clip(((-10.*I_T_E)/uA/(2.*96489)), 0, 5)/ms + (0.00024/ms-CaBuffer_E/ms)/5 : 1"}}, "full_neuron_eqns": "\ndv/dt=(I_Na_E+I_K_E+I_T_E+I_GABAa_I_E + I_app)/Cm : volt\nCm = 1*uF : farad\nI_app = 0*uA : amp\n\nE_Na_E = 50*mV : volt\ng_Na_E = 120*msiemens : siemens\nv_shift_Na_E = -65*mV : volt\nalpha_h_Na_E = .07*exp(-(v-v_shift_Na_E)/mV/20)/ms : hertz\nI_Na_E = -g_Na_E*m_Na_E**3*h_Na_E*(v-E_Na_E) : amp\nalpha_m_Na_E = (2.5-.1*(v-v_shift_Na_E)/mV)/(exp(2.5-.1*(v-v_shift_Na_E)/mV)-1)/ms : hertz\nbeta_m_Na_E = 4*exp(-(v-v_shift_Na_E)/mV/18)/ms : hertz\nbeta_h_Na_E = 1./(exp(3-.1*(v-v_shift_Na_E)/mV)+1)/ms : hertz\ndm_Na_E/dt = alpha_m_Na_E*(1-m_Na_E)-beta_m_Na_E*m_Na_E : 1\ndh_Na_E/dt = alpha_h_Na_E*(1-h_Na_E)-beta_h_Na_E*h_Na_E : 1\nv_shift_K_E = -65*mV : volt\nalpha_n_K_E = (.1-.01*(v-v_shift_K_E)/mV)/(exp(1-.1*(v-v_shift_K_E)/mV)-1)/ms : hertz\ng_K_E = 36*msiemens : siemens\nbeta_n_K_E = .125*exp(-(v-v_shift_K_E)/mV/80)/ms : hertz\nE_K_E = -77*mV : volt\nI_K_E = -g_K_E*n_K_E**4.*(v-E_K_E) : amp\ndn_K_E/dt = alpha_n_K_E*(1-n_K_E)-beta_n_K_E*n_K_E : 1\nv_shift_T_E = -2*mV : volt\ng_T_E = 2*msiemens : siemens\nE_T_E = 1000.*((8.31441*309.15)/(2.*96846))*log(2./CaBuffer_E)*mV : volt\nm_inf_T_E = 1./(1+exp((-((v-v_shift_T_E)/mV+57))/6.2)) : 1\nphi_h_T_E = 3.73 : 1\nh_inf_T_E = 1./(1+exp(((v-v_shift_T_E)/mV+81)/4)) : 1\nI_T_E = -g_T_E*m_inf_T_E**2*h_T_E*(v-E_T_E) : amp\ntau_h_T_E = (30.8+(211.4+exp(((v-v_shift_T_E)/mV+113.2)/5))/(1+exp(((v-v_shift_T_E)/mV+84)/3.2)))/phi_h_T_E*ms : second\ndh_T_E/dt = (h_inf_T_E-h_T_E)/tau_h_T_E : 1\ndCaBuffer_E/dt = clip(((-10.*I_T_E)/uA/(2.*96489)), 0, 5)/ms + (0.00024/ms-CaBuffer_E/ms)/5 : 1\ng_GABAa_I_E = 0.1*msiemens : siemens\nE_GABAa_I_E = -80*mV : volt\nI_GABAa_I_E = -g_GABAa_I_E/N_pre*s_GABAa_I_E_total*(v-E_GABAa_I_E) : amp\ns_GABAa_I_E_total : 1\n", "namespace_parametrizations": {"I_app_E": "5*uA", "g_Na_E": "120*msiemens", "g_K_E": "77*msiemens"}, "namespace_variations": {}}, "2": {"name": "I", "size": 20, "master_eqns": "\ndv/dt=(current + I_app)/Cm : volt\nCm = 1*uF : farad\nI_app = 0*uA : amp\n", "mechanism_list": ["iNa", "iK"], "iNa": {"name": "iNa", "raw_eqns": {"neuron_eqns": "g_Na = 120*msiemens : siemens\nE_Na = 50*mV : volt\nv_shift_Na = -65*mV : volt\nalpha_m_Na = (2.5-.1*(v-v_shift_Na)/mV)/(exp(2.5-.1*(v-v_shift_Na)/mV)-1)/ms : Hz\nbeta_m_Na = 4*exp(-(v-v_shift_Na)/mV/18)/ms : Hz\nalpha_h_Na = .07*exp(-(v-v_shift_Na)/mV/20)/ms : Hz\nbeta_h_Na = 1./(exp(3-.1*(v-v_shift_Na)/mV)+1)/ms : Hz\nI_Na = -g_Na*m_Na**3*h_Na*(v-E_Na) : amp\n# ODEs and ICs\ndm_Na/dt = alpha_m_Na*(1-m_Na)-beta_m_Na*m_Na : 1\ndh_Na/dt = alpha_h_Na*(1-h_Na)-beta_h_Na*h_Na : 1\n"}, "converted_eqns": {"neuron_eqns": "E_Na_I = 50*mV : volt\nv_shift_Na_I = -65*mV : volt\nbeta_m_Na_I = 4*exp(-(v-v_shift_Na_I)/mV/18)/ms : hertz\nalpha_h_Na_I = .07*exp(-(v-v_shift_Na_I)/mV/20)/ms : hertz\nbeta_h_Na_I = 1./(exp(3-.1*(v-v_shift_Na_I)/mV)+1)/ms : hertz\nalpha_m_Na_I = (2.5-.1*(v-v_shift_Na_I)/mV)/(exp(2.5-.1*(v-v_shift_Na_I)/mV)-1)/ms : hertz\ng_Na_I = 120*msiemens : siemens\nI_Na_I = -g_Na_I*m_Na_I**3*h_Na_I*(v-E_Na_I) : amp\ndm_Na_I/dt = alpha_m_Na_I*(1-m_Na_I)-beta_m_Na_I*m_Na_I : 1\ndh_Na_I/dt = alpha_h_Na_I*(1-h_Na_I)-beta_h_Na_I*h_Na_I : 1"}, "current": {"name": "I_Na_I"}}, "iK": {"name": "iK", "raw_eqns": {"neuron_eqns": "# Parameters\ng_K = 36*msiemens : siemens\nE_K = -77*mV : volt\nv_shift_K = -65*mV : volt\n# Functions\nalpha_n_K = (.1-.01*(v-v_shift_K)/mV)/(exp(1-.1*(v-v_shift_K)/mV)-1)/ms : Hz\nbeta_n_K = .125*exp(-(v-v_shift_K)/mV/80)/ms : Hz\nI_K = -g_K*n_K**4.*(v-E_K) : amp\n# ODEs and ICs\ndn_K/dt = alpha_n_K*(1-n_K)-beta_n_K*n_K : 1\n"}, "converted_eqns": {"neuron_eqns": "E_K_I = -77*mV : volt\nv_shift_K_I = -65*mV : volt\ng_K_I = 36*msiemens : siemens\nbeta_n_K_I = .125*exp(-(v-v_shift_K_I)/mV/80)/ms : hertz\nalpha_n_K_I = (.1-.01*(v-v_shift_K_I)/mV)/(exp(1-.1*(v-v_shift_K_I)/mV)-1)/ms : hertz\nI_K_I = -g_K_I*n_K_I**4.*(v-E_K_I) : amp\ndn_K_I/dt = alpha_n_K_I*(1-n_K_I)-beta_n_K_I*n_K_I : 1"}, "current": {"name": "I_K_I"}}, "full_neuron_eqns": "\ndv/dt=(I_Na_I+I_K_I+I_AMPA_E_I+I_GABAa_I_I + I_app)/Cm : volt\nCm = 1*uF : farad\nI_app = 0*uA : amp\n\nE_Na_I = 50*mV : volt\nv_shift_Na_I = -65*mV : volt\nbeta_m_Na_I = 4*exp(-(v-v_shift_Na_I)/mV/18)/ms : hertz\nalpha_h_Na_I = .07*exp(-(v-v_shift_Na_I)/mV/20)/ms : hertz\nbeta_h_Na_I = 1./(exp(3-.1*(v-v_shift_Na_I)/mV)+1)/ms : hertz\nalpha_m_Na_I = (2.5-.1*(v-v_shift_Na_I)/mV)/(exp(2.5-.1*(v-v_shift_Na_I)/mV)-1)/ms : hertz\ng_Na_I = 120*msiemens : siemens\nI_Na_I = -g_Na_I*m_Na_I**3*h_Na_I*(v-E_Na_I) : amp\ndm_Na_I/dt = alpha_m_Na_I*(1-m_Na_I)-beta_m_Na_I*m_Na_I : 1\ndh_Na_I/dt = alpha_h_Na_I*(1-h_Na_I)-beta_h_Na_I*h_Na_I : 1\nE_K_I = -77*mV : volt\nv_shift_K_I = -65*mV : volt\ng_K_I = 36*msiemens : siemens\nbeta_n_K_I = .125*exp(-(v-v_shift_K_I)/mV/80)/ms : hertz\nalpha_n_K_I = (.1-.01*(v-v_shift_K_I)/mV)/(exp(1-.1*(v-v_shift_K_I)/mV)-1)/ms : hertz\nI_K_I = -g_K_I*n_K_I**4.*(v-E_K_I) : amp\ndn_K_I/dt = alpha_n_K_I*(1-n_K_I)-beta_n_K_I*n_K_I : 1\ng_AMPA_E_I = 0.1*msiemens : siemens\nE_AMPA_E_I = -80*mV : volt\nI_AMPA_E_I = -g_AMPA_E_I/N_pre*s_AMPA_E_I_total*(v-E_AMPA_E_I) : amp\ns_AMPA_E_I_total : 1\nE_GABAa_I_I = -80*mV : volt\ng_GABAa_I_I = 0.1*msiemens : siemens\nI_GABAa_I_I = -g_GABAa_I_I/N_pre*s_GABAa_I_I_total*(v-E_GABAa_I_I) : amp\ns_GABAa_I_I_total : 1\n", "namespace_parametrizations": {"g_Na_I": "120*msiemens", "g_K_I": "36*msiemens"}, "namespace_variations": {}}}}{"synapses": {"1": {"direction": "I->E", "source": "I", "target": "E", "mechanism_list": ["iGABAa"], "target_size": 10, "source_size": 20, "iGABAa": {"name": "iGABAa", "raw_eqns": {"synapse_eqns": "tau_GABAa = 5*ms : second\nds_GABAa/dt=1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa)/ms - s_GABAa/tau_GABAa : 1 (clock-driven)\ns_GABAa_total_post = s_GABAa : 1 (summed)\n", "target_neuron_eqns": "g_GABAa = 0.1*msiemens : siemens\nE_GABAa = -80*mV : volt\ns_GABAa_total : 1\n# N_pre or N_post?\n# Note: there must be an equation for a variable named 'I'\n# Note: use uppercase I for current, since lowercase 'i' is used for\n#   describing connections\nI_GABAa = -g_GABAa/N_pre*s_GABAa_total*(v-E_GABAa) : amp\n", "connection_eqns": "abs(i-j)<=2\n"}, "converted_eqns": {"synapse_eqns": "s_GABAa_I_E_total_post = s_GABAa_I_E : 1 (summed)\ntau_GABAa_I_E = 5*ms : second\nds_GABAa_I_E/dt = 1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa_I_E)/ms - s_GABAa_I_E/tau_GABAa_I_E : 1 (clock-driven)", "target_neuron_eqns": "g_GABAa_I_E = 0.1*msiemens : siemens\nE_GABAa_I_E = -80*mV : volt\nI_GABAa_I_E = -g_GABAa_I_E/N_pre*s_GABAa_I_E_total*(v-E_GABAa_I_E) : amp\ns_GABAa_I_E_total : 1", "connection_eqns": "abs(i-j)<=2\n"}, "current": {"name": "I_GABAa_I_E"}, "full_synapse_eqns": "s_GABAa_I_E_total_post = s_GABAa_I_E : 1 (summed)\ntau_GABAa_I_E = 5*ms : second\nds_GABAa_I_E/dt = 1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa_I_E)/ms - s_GABAa_I_E/tau_GABAa_I_E : 1 (clock-driven)\n", "namespace_parametrizations": {"tau_GABAa_I_E": "10*ms", "g_GABAa_I_E": "0.1*msiemens"}, "namespace_variations": {}}}, "2": {"direction": "E->I", "source": "E", "target": "I", "mechanism_list": ["iAMPA"], "source_size": 10, "target_size": 20, "iAMPA": {"name": "iAMPA", "raw_eqns": {"synapse_eqns": "tau_d_AMPA = 2*ms : second\ntau_r_AMPA = 0.4*ms : second\nds_AMPA/dt = -s_AMPA/tau_d_AMPA + ((1-s_AMPA)/tau_r_AMPA)*(1+tanh(v_pre/10.)) : 1 (clock-driven)\ns_AMPA_total_post = s_AMPA : 1 (summed)\n", "target_neuron_eqns": "g_AMPA = 0.1*msiemens : siemens\nE_AMPA = -80*mV : volt\ns_AMPA_total : 1\n# N_pre or N_post?\n# Note: there must be an equation for a variable named 'I'\n# Note: use uppercase I for current, since lowercase 'i' is used for\n#   describing connections\nI_AMPA = -g_AMPA/N_pre*s_AMPA_total*(v-E_AMPA) : amp\n", "connection_eqns": ""}, "converted_eqns": {"synapse_eqns": "tau_r_AMPA_E_I = 0.4*ms : second\ns_AMPA_E_I_total_post = s_AMPA_E_I : 1 (summed)\ntau_d_AMPA_E_I = 2*ms : second\nds_AMPA_E_I/dt = -s_AMPA_E_I/tau_d_AMPA_E_I + ((1-s_AMPA_E_I)/tau_r_AMPA_E_I)*(1+tanh(v_pre/10.)) : 1 (clock-driven)", "target_neuron_eqns": "g_AMPA_E_I = 0.1*msiemens : siemens\nE_AMPA_E_I = -80*mV : volt\nI_AMPA_E_I = -g_AMPA_E_I/N_pre*s_AMPA_E_I_total*(v-E_AMPA_E_I) : amp\ns_AMPA_E_I_total : 1", "connection_eqns": ""}, "current": {"name": "I_AMPA_E_I"}, "full_synapse_eqns": "tau_r_AMPA_E_I = 0.4*ms : second\ns_AMPA_E_I_total_post = s_AMPA_E_I : 1 (summed)\ntau_d_AMPA_E_I = 2*ms : second\nds_AMPA_E_I/dt = -s_AMPA_E_I/tau_d_AMPA_E_I + ((1-s_AMPA_E_I)/tau_r_AMPA_E_I)*(1+tanh(v_pre/10.)) : 1 (clock-driven)\n", "namespace_parametrizations": {"tau_d_AMPA_E_I": "2*ms", "g_AMPA_E_I": "0.1*msiemens"}, "namespace_variations": {}}}, "3": {"direction": "I->I", "source": "I", "target": "I", "mechanism_list": ["iGABAa"], "source_size": 20, "iGABAa": {"name": "iGABAa", "raw_eqns": {"synapse_eqns": "tau_GABAa = 5*ms : second\nds_GABAa/dt=1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa)/ms - s_GABAa/tau_GABAa : 1 (clock-driven)\ns_GABAa_total_post = s_GABAa : 1 (summed)\n", "target_neuron_eqns": "g_GABAa = 0.1*msiemens : siemens\nE_GABAa = -80*mV : volt\ns_GABAa_total : 1\n# N_pre or N_post?\n# Note: there must be an equation for a variable named 'I'\n# Note: use uppercase I for current, since lowercase 'i' is used for\n#   describing connections\nI_GABAa = -g_GABAa/N_pre*s_GABAa_total*(v-E_GABAa) : amp\n", "connection_eqns": "abs(i-j)<=2\n"}, "converted_eqns": {"synapse_eqns": "s_GABAa_I_I_total_post = s_GABAa_I_I : 1 (summed)\ntau_GABAa_I_I = 5*ms : second\nds_GABAa_I_I/dt = 1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa_I_I)/ms - s_GABAa_I_I/tau_GABAa_I_I : 1 (clock-driven)", "target_neuron_eqns": "E_GABAa_I_I = -80*mV : volt\ng_GABAa_I_I = 0.1*msiemens : siemens\nI_GABAa_I_I = -g_GABAa_I_I/N_pre*s_GABAa_I_I_total*(v-E_GABAa_I_I) : amp\ns_GABAa_I_I_total : 1", "connection_eqns": "abs(i-j)<=2\n"}, "current": {"name": "I_GABAa_I_I"}, "full_synapse_eqns": "s_GABAa_I_I_total_post = s_GABAa_I_I : 1 (summed)\ntau_GABAa_I_I = 5*ms : second\nds_GABAa_I_I/dt = 1000.*2.*(1 + tanh(v_pre/(4.*mV)))*(1-s_GABAa_I_I)/ms - s_GABAa_I_I/tau_GABAa_I_I : 1 (clock-driven)\n", "namespace_parametrizations": {"tau_GABAa_I_I": "10*ms", "g_GABAa_I_I": "0.1*msiemens"}, "namespace_variations": {}}}}}